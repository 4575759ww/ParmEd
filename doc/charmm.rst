The :mod:`chemistry.charmm` package
===================================

The :mod:`charmm` package contains classes that can parse a variety of CHARMM
files, including PSF files, parameter files, and coordinate files.
Parameter files (PAR), stream files (STR), CHARMM coordinate files, and CHARMM
restart files.

It is beyond the scope of this site to discuss the details of these file
formats, so you are instead forwarded to `the CHARMM documentation
<http://www.charmm.org/documentation/c32b2/>`_.

The Protein Structure File (PSF)
--------------------------------

The PSF file is the heart of the CHARMM workflow, representing a molecular
system and its topology. It contains a list of all atoms with (most of) their
atomic properties, and then a list of the covalent bonds and valence bonded
terms (e.g., angles, torsions, improper torsions, and coupled-torsions). There
are a number of dialects of the PSF file, including that used by CHARMM, those
generated by `VMD's autopsf tool <http://www.ks.uiuc.edu/Research/vmd/>`_,
so-called *XPLOR* PSFs, etc.

The :class:`CharmmPsfFile` class is capable of parsing all PSF file formats that
I have encountered (excluding those with virtual sites and Drude particles,
currently).

.. currentmodule:: chemistry.charmm
.. autosummary::
    :toctree: charmmobj/

    CharmmPsfFile

This class is a subclass of :class:`Structure <chemistry.structure.Structure>`,
and as such contains the corresponding topology arrays :attr:`atoms
<CharmmPsfFile.atoms>`, :attr:`bonds <CharmmPsfFile.bonds>`, ... etc. An example
demonstrating the use of :class:`CharmmPsfFile` to parse ``dhfr_cmap_pbc.psf``
(a sample PSF file in the ParmEd unit test suite) is shown below::

    >>> psf = CharmmPsfFile('dhfr_cmap_pbc.psf')
    >>> len(psf.atoms)
    56057
    >>> len(psf.bonds)
    56091
    >>> len(psf.angles)
    22417
    >>> len(psf.impropers)
    418

CHARMM Parameter Sets
---------------------

CHARMM parameters are spread across three different types of files: *Residue
topology files* (RTF), *Parameter files* (PAR), and *stream files* (STR). A
:class:`CharmmParameterSet` (described briefly below) will build a parameter
database from collections of all three of these files.

.. currentmodule:: chemistry.charmm
.. autosummary::
    :toctree: charmmobj/

    CharmmParameterSet

To instantiate a parameter set, you can pass a list of file names (any iterable
will suffice) to the :class:`CharmmParameterSet` constructor, and the format
will be determined from the file name itself. File type recognition follows the
rules summarized in the table below:

+-----------------+-------------------------------------------+
| Filename suffix | File type                                 |
+=================+===========================================+
| ``.rtf, .top``  | RTF                                       |
+-----------------+-------------------------------------------+
| ``.par, .prm``  | Parameter file                            |
+-----------------+-------------------------------------------+
| ``.str``        | Stream file                               |
+-----------------+-------------------------------------------+
| ``.inp``        | Parameter file if ``par`` is in the name, |
|                 | RTF if ``top`` is in the file name.       |
|                 | Otherwise ``ValueError`` is raised.       |
+-----------------+-------------------------------------------+

An example is shown processing the sample CHARMM 22 and CHARMM 36 force field
files provided in the ParmEd unit test files::



Residue Topology File (RTF)
~~~~~~~~~~~~~~~~~~~~~~~~~~~

The RTF file contains a library of residue templates (residue names, the atoms
within the residues, their connectivity, and a standard internal coordinate
representation of their orientation). It also describes various *patches* (i.e.,
small fragments meant to adorn or modify the more typical residues) that are
used to modify the residues. This information is *not* currently processed by
:class:`CharmmParameterSet`. The only information that the RTF file contains
that :class:`CharmmParameterSet` makes use of is the listing of atom types.

As of the CHARMM 36 parameter set, however, this information is now stored in
the 
